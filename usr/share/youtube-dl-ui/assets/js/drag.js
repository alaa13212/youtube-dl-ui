// Generated by CoffeeScript 1.6.3
(function() {
	var allowDrop, download, drop, getUriFromFile, gui, uriReg;

	gui = require('nw.gui');

	this.dragWin = gui.Window.get();

	uriReg = /https?:\/\/\S+/g;

	download = function(uri) {
		var mw;
		mw = window.mainWin.window;
		window.mainWin.show();
		mw.$('#url').val(uri);
		mw.$('#parm').submit();
		return window.dragWin.close();
	};

	getUriFromFile = function(files, callback, i, result) {
		var file, reader;
		if (i == null) {
			i = 0;
		}
		if (result == null) {
			result = '';
		}
		if ( file = files[i]) {
			if (file.type.match(/text.*/)) {
				reader = new FileReader();
				reader.onload = (function(files, callback, i, result) {
					return function(e) {
						result += e.target.result.match(uriReg).join(' ');
						return getUriFromFile(files, callback, ++i, result + ' ');
					};
				})(files, callback, i, result);
				return reader.readAsText(file);
			} else {
				return getUriFromFile(files, callback, ++i, result);
			}
		} else {
			return callback(result);
		}
	};

	drop = function(e) {
		var data, uri;
		e.preventDefault();
		$(document.body).css('background-color', '#FFA0A0');
		data = e.dataTransfer;
		if (data.files.length !== 0) {
			return getUriFromFile(data.files, download);
		} else if (( uri = data.getData('text/uri-list')) !== '') {
			return download(uri);
		} else if (( uri = data.getData('text/plain').match(uriReg)).length !== 0) {
			window.mainWin.show();
			return download(uri.join(' '));
		} else {
			return alert('ﻻ أعرف مالذي أفلت تواصل مع المطور لحل  المشكلة');
		}
	};

	allowDrop = function(e) {
		e.preventDefault();
		return $(document.body).css('background-color', '#D52626');
	};

	jQuery.event.props.push("dataTransfer");

	$(document.body).on({
		'dragover' : allowDrop,
		'drop' : drop,
		'dragleave' : function() {
			return $(document.body).css('background-color', '#D52626');
		}
	});

}).call(this);
